"use strict";(self.webpackChunkeigr_io=self.webpackChunkeigr_io||[]).push([[387],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return g}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),g=r,f=d["".concat(s,".").concat(g)]||d[g]||u[g]||i;return n?o.createElement(f,a(a({ref:t},c),{},{components:n})):o.createElement(f,a({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1887:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return a},default:function(){return u},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return p}});var o=n(3117),r=(n(7294),n(3905));const i={sidebar_position:10},a="Getting started with Go",l={unversionedId:"projects-functions/sdk/go/getting-started",id:"projects-functions/sdk/go/getting-started",title:"Getting started with Go",description:"Prerequisites",source:"@site/docs/projects-functions/sdk/go/getting-started.md",sourceDirName:"projects-functions/sdk/go",slug:"/projects-functions/sdk/go/getting-started",permalink:"/docs/projects-functions/sdk/go/getting-started",draft:!1,editUrl:"https://github.com/eigr/eigr.github.io/edit/main/website/docs/projects-functions/sdk/go/getting-started.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"eigrSidebar",previous:{title:"Deployment",permalink:"/docs/projects-functions/functions-operator"},next:{title:"Event Sourcing",permalink:"/docs/projects-functions/sdk/go/event-sourcing"}},s={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Go version",id:"go-version",level:3},{value:"Build tool",id:"build-tool",level:3},{value:"protoc",id:"protoc",level:3},{value:"docker",id:"docker",level:3},{value:"Protobuf files",id:"protobuf-files",level:2},{value:"Creating a main package",id:"creating-a-main-package",level:2},{value:"Interfaces to be implemented",id:"interfaces-to-be-implemented",level:2}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"getting-started-with-go"},"Getting started with Go"),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("h3",{id:"go-version"},"Go version"),(0,r.kt)("p",null,"Cloudstate Go support requires at least Go 1.14"),(0,r.kt)("h3",{id:"build-tool"},"Build tool"),(0,r.kt)("p",null,"Cloudstate does not require any particular build tool, you can select your own."),(0,r.kt)("h3",{id:"protoc"},"protoc"),(0,r.kt)("p",null,"Since Cloudstate is based on gRPC services, you need a protoc compiler to compile gRPC protobuf descriptors. This can be\ndone manually through the ","[https://grpc.io/docs/languages/go/quickstart/#prerequisites]","(gRPC Project) where it's\ndescribed how to install the protocol compiler as well as the go-protobuf and grpc compiler plugins for Go."),(0,r.kt)("h3",{id:"docker"},"docker"),(0,r.kt)("p",null,"Cloudstate runs in Kubernetes with ",(0,r.kt)("a",{parentName:"p",href:"https://www.docker.com"},"Docker"),", hence you will need Docker to build a container\nthat you can deploy to Kubernetes."),(0,r.kt)("p",null,"In addition to the above, you will need to install the Cloudstate Go language support library by\nissuing ",(0,r.kt)("inlineCode",{parentName:"p"},"go get -u github.com/eigr/permastate-go/cloudstate")," or with Go module support let the dependency be downloaded\nby ",(0,r.kt)("inlineCode",{parentName:"p"},"go [build|run|test]"),"."),(0,r.kt)("p",null,"By using the Go module support your ",(0,r.kt)("inlineCode",{parentName:"p"},"go.mod")," file will reference the latest version of the support library or you can\ndefine which version you like to use."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="go get"',title:'"go','get"':!0},"go get -u github.com/eigr/functions-go-sdk/functions\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="go import"',title:'"go','import"':!0},'import "github.com/eigr/functions-go-sdk/functions"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="go.mod"',title:'"go.mod"'},"module example.com/yourpackage\n\ngo 1.14\n\nrequire (\n    github.com/eigr/functions-go-sdk 0.1.0\n)\n")),(0,r.kt)("h2",{id:"protobuf-files"},"Protobuf files"),(0,r.kt)("p",null,"The Cloudstate Go Support Library provides no dedicated tool beside the protoc compiler to build your protobuf files.\nThe Cloudstate protocol protobuf files as well as the shopping cart example application protobuf files are provided by\nthe Cloudstate Repository."),(0,r.kt)("p",null,"In addition to the ",(0,r.kt)("inlineCode",{parentName:"p"},"protoc")," compiler, the gRPC Go plugin is needed to compile the protobuf file to ",(0,r.kt)("inlineCode",{parentName:"p"},"*.pb.go")," files.\nPlease follow the instructions at the ","[https://github.com/golang/protobuf]","(Go support for Protocol Buffers) project page\nto install the protoc compiler as well as the ",(0,r.kt)("inlineCode",{parentName:"p"},"protoc-gen-go")," plugin which also includes the Google standard protobuf\ntypes."),(0,r.kt)("p",null,"To build the example shopping cart application shown earlier in xref:concepts:grpc.adoc","[gRPC descriptors]",", you could\nsimply paste that protobuf into a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"shoppingcart.proto"),". You may wish to also define the Go package using\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"go_package")," proto option, to ensure the package name used conforms to Go package naming conventions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-protopbuf"},'option go_package = "example.com/shoppingcart;shoppingcart";\n')),(0,r.kt)("p",null,"Now if you place your protobuf files under ",(0,r.kt)("inlineCode",{parentName:"p"},"protobuf/")," and\nrun ",(0,r.kt)("inlineCode",{parentName:"p"},"protoc --go_out=. --proto_path=protobuf ./protobuf/*.proto"),", you'll find your generated protobuf files\nunder ",(0,r.kt)("inlineCode",{parentName:"p"},"shoppingcart"),"."),(0,r.kt)("h2",{id:"creating-a-main-package"},"Creating a main package"),(0,r.kt)("p",null,"Your main package will be responsible for creating the Cloudstate gRPC server, registering the entities for it to serve,\nand starting it. To do this, you can use the CloudState server type, for example:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"include::example$tck/cmd/tck_eventsourced/tck_eventsourced.go[tag=shopping-cart-main])")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    server, err := cloudstate.New(protocol.Config{\n        ServiceName:    "cloudstate.tck.model.EventSourcedTckModel", // the servicename the proxy gets to know about\n        ServiceVersion: "0.2.0",\n    })\n    if err != nil {\n        log.Fatalf("cloudstate.New failed: %s", err)\n    }\n    err = server.RegisterEventSourced(\n        &eventsourced.Entity{\n            ServiceName:   "cloudstate.tck.model.EventSourcedTckModel",\n            PersistenceID: "event-sourced-tck-model",\n            SnapshotEvery: 5,\n            EntityFunc:    tck.NewTestModel,\n        }, protocol.DescriptorConfig{\n            Service: "eventsourced.proto",\n        },\n    )\n    if err != nil {\n        log.Fatalf("Cloudstate failed to register entity: %s", err)\n    }\n    err = server.Run()\n    if err != nil {\n        log.Fatalf("Cloudstate failed to run: %v", err)\n    }\n}\n')),(0,r.kt)("p",null,"We will see more details on registering entities in the coming pages."),(0,r.kt)("h2",{id:"interfaces-to-be-implemented"},"Interfaces to be implemented"),(0,r.kt)("p",null,"Cloudstate entities in Go work by implementing interfaces and registering those entities with a Cloudstate instance.\nDuring the registration of the entity an entity factory function,\n",(0,r.kt)("inlineCode",{parentName:"p"},"/cloudstate/eventsourced#Entity.EntityFunc"),", has to be provided so that Cloudstate gets to know how to create and\ninitialize an event sourced entity."),(0,r.kt)("p",null,"include::example$example/shoppingcart/entity.go","[tag=entity-func]"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func NewShoppingCart(eventsourced.EntityID) eventsourced.EntityHandler {\n    return &ShoppingCart{\n        cart: make([]*domain.LineItem, 0),\n    }\n}\n")),(0,r.kt)("p",null,"This entity factory function returns a type that implements the\n",(0,r.kt)("inlineCode",{parentName:"p"},"/cloudstate/eventsourced#EntityHandler")," interface. An entity can implement the\noptional ",(0,r.kt)("inlineCode",{parentName:"p"},"/cloudstate/eventsourced#Snapshooter")," interface if it likes to enable snapshot functionality. We will see\nlater how to handle snapshots on the following pages."))}u.isMDXComponent=!0}}]);