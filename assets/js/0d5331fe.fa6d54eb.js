"use strict";(self.webpackChunkeigr_io=self.webpackChunkeigr_io||[]).push([[850],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=o.createContext({}),l=function(e){var t=o.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(r),m=n,f=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return r?o.createElement(f,i(i({ref:t},p),{},{components:r})):o.createElement(f,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<a;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4494:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return d}});var o=r(7462),n=r(3366),a=(r(7294),r(3905)),i=["components"],s={sidebar_position:999},c="History",l={unversionedId:"history",id:"history",isDocsHomePage:!1,title:"History",description:"The Legacy of Cloudstate",source:"@site/docs/history.md",sourceDirName:".",slug:"/history",permalink:"/docs/history",editUrl:"https://github.com/eigr/eigr.github.io/edit/main/website/docs/history.md",version:"current",sidebarPosition:999,frontMatter:{sidebar_position:999},sidebar:"eigrSidebar",previous:{title:"Glossary of Terms",permalink:"/docs/glossary-of-terms"}},p=[{value:"The Legacy of Cloudstate",id:"the-legacy-of-cloudstate",children:[]},{value:"Massa, a Cloudstate Compatible Proxy Implementation",id:"massa-a-cloudstate-compatible-proxy-implementation",children:[]}],u={toc:p};function d(e){var t=e.components,r=(0,n.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"history"},"History"),(0,a.kt)("h2",{id:"the-legacy-of-cloudstate"},"The Legacy of Cloudstate"),(0,a.kt)("p",null,"The eigr/massa project got started after parts of the contributors-community around the open-source\nproject ",(0,a.kt)("a",{parentName:"p",href:"https://cloudstate.io"},"Cloudstate")," decided to implement a service proxy beside\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/cloudstateio/cloudstate/tree/v0.6.0/proxy"},"reference implementation")," by Cloudstate based on\ndifferent technical ground."),(0,a.kt)("p",null,'The gRPC based "Cloudstate Protocol" and the sidecar-based proxy model, has followed over to the eigr/massa service\nproxy implementation. The protocol, on one side, enables a polyglot programming model for eigr \u2013 on the other side, it\'s\nthe main driver for eigr.'),(0,a.kt)("p",null,"The decision to fork the Cloudstate project and go on with an implementation that differs technology wise is based on a\nshift in focus of the initiating organization ",(0,a.kt)("a",{parentName:"p",href:"https://lightbend.com/"},"Lightbend Inc.")," to pursue\na ",(0,a.kt)("a",{parentName:"p",href:"https://www.lightbend.com/akka-serverless"},"Serverless offering"),"\nof the Cloudstate technology. The members of the eigr.io Open-source project have been very supportive and engaged in\nmany ways in contributions to the platform, as well as the so-called Language Support Libraries that makes the project\nattractive to a Cloud Native setting."),(0,a.kt)("h2",{id:"massa-a-cloudstate-compatible-proxy-implementation"},"Massa, a Cloudstate Compatible Proxy Implementation"),(0,a.kt)("p",null,"eigr/massa is a Cloudstate compatible proxy implementation in ",(0,a.kt)("a",{parentName:"p",href:"https://elixir-lang.org"},"Elixir")," on\nthe ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/BEAM_(Erlang_virtual_machine)"},"BEAM"),"."))}d.isMDXComponent=!0}}]);