<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://eigr.io/blog</id>
    <title>eigr.io Blog</title>
    <updated>2022-09-08T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://eigr.io/blog"/>
    <subtitle>eigr.io Blog</subtitle>
    <icon>https://eigr.io/icon/favicon.ico?v=2</icon>
    <entry>
        <title type="html"><![CDATA[Welcome Spawn – The Actor Mesh]]></title>
        <id>spawn-the-actor-mesh</id>
        <link href="https://eigr.io/blog/spawn-the-actor-mesh"/>
        <updated>2022-09-08T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Lately we decided to promote Spawn from eigr-labs to the main eigr github organization//github.com/eigr/spawn.]]></summary>
        <content type="html"><![CDATA[<p>Lately we decided to promote Spawn from eigr-labs to the main eigr github organization: <a href="https://github.com/eigr/spawn" target="_blank" rel="noopener noreferrer">https://github.com/eigr/spawn</a>.
At the same time we archived the massa proxy repository and explained our motivation behind it.</p><p>It has been three years ago when we met in a new open source community while we tried to make a
then shiny new project successful–<a href="https://cloudstate.io/" target="_blank" rel="noopener noreferrer">https://cloudstate.io/</a>. While we've discovered and also implemented a communications
procotol for a multitude of programming languages, we constantly iterated on ideas how to build a system that is able to
scale and also being usable on many places not only on backend services. At the time we discovered the serverless space,
having also solved the stateful aspect of it by using a then promising new procotol and concept called Cloudstate. After
some re-priorization with the project as a whole, the core OSS community moved on to build eigr.io and discover our
ideas under this new umbrella organization <a href="https://eigr.io/" target="_blank" rel="noopener noreferrer">https://eigr.io/</a>.</p><p>Over the last couple of months, Spawn has been shaped by our vision to have a simpler and more focused way to bring an
actor system to a polyglot environment, where the way of how components can interact like Actors and Processes do, is
not that well known in other languages. eigr/Massa always was about to solve the challenge of stateful serverless, like
it took the vision from its originating project. But at the same time Massa also tried always to solve two things at the
same time. Building a polyglot serverless runtime and also solve the aspect of statefull serverless has been sometimes
being too much at the same time. Spawn is a focused effort to solve one problem first, and then, being enabled to build
the stateful aspect of serverless on top of it. In this regard, we focus now on something that is that enabler and
perhaps one for other problems to solve.</p><p>This has been the work of ours lead by Adriano with help from Wesley and Elias; beside that I was able to participate a
bit in discussions and presenting our project a two occasions over the last year. I'm looking forward to see Spawn
growing into something really cool, special and useful. There is still a lot of work ahead of us and we're very exited
to see how we can collaborate and grow as a project.</p><p>We are 100% focused on making Spawn a robust, scalable, dynamic and expandable platform, taking us far beyond what
we imagined we were capable of in the initial Cloudstate project and with our previous implementation of Massa.
Massa has served us brilliantly as a means of experimentation, and now I feel deeply that we are ready to accomplish
whatever we set out to do.</p><p>We invite everyone who is here to download and try Spawn and that we are ready to welcome those who want to contribute,
whether with doubts, suggestions, a little code is also welcome, or a text review, any contribution is welcome. We
greatly admire all of you who are interested in our project.</p>]]></content>
        <author>
            <name>Adriano Santos</name>
            <uri>https://github.com/sleipnir</uri>
        </author>
        <author>
            <name>Marcel Lanz</name>
            <uri>https://github.com/marcellanz</uri>
        </author>
        <category label="serverless" term="serverless"/>
        <category label="cloudstate" term="cloudstate"/>
        <category label="eigr-functions" term="eigr-functions"/>
        <category label="project" term="project"/>
        <category label="status" term="status"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[May 2022 – Status of the Project]]></title>
        <id>current-status-of-the-project</id>
        <link href="https://eigr.io/blog/current-status-of-the-project"/>
        <updated>2022-05-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My name is Adriano, I'm a software engineer, I'm 40 years old, I'm Brazilian, and I've been in the technology area for over 20 years on different fronts and having worked in a long list of companies, I'm also the co-founder of the Eigr project together with @marcellanz and @guyso, previously the three of us were core members of the Cloudstate project and mainly worked on the supporting SDKs, but we also participated in the central development of Cloudstate technology and collaborated a lot on the development mainly of its protocol.]]></summary>
        <content type="html"><![CDATA[<p>My name is Adriano, I'm a software engineer, I'm 40 years old, I'm Brazilian, and I've been in the technology area for over 20 years on different fronts and having worked in a long list of companies, I'm also the co-founder of the Eigr project together with <a href="https://github.com/marcellanz" target="_blank" rel="noopener noreferrer">@marcellanz</a> and <a href="https://github.com/ralphlaude" target="_blank" rel="noopener noreferrer">@guyso</a>, previously the three of us were core members of the <a href="https://cloudstate.io/" target="_blank" rel="noopener noreferrer">Cloudstate</a> project and mainly worked on the supporting SDKs, but we also participated in the central development of Cloudstate technology and collaborated a lot on the development mainly of its protocol.</p><p>I see that many of you have just arrived here and that's why I think it's important to give an overview of what we do and talk a little about the current status of the project.</p><p>Well, let's go!</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="overview">Overview:<a class="hash-link" href="#overview" title="Direct link to heading">​</a></h2><p>Our ecosystem is called Eigr, and we focus mainly on the following projects:</p><ul><li><p><a href="https://github.com/eigr/eigr-functions-controller" target="_blank" rel="noopener noreferrer">Eigr Functions Controller</a>: it's our deployment brain in Kubernetes, it controls the entire lifecycle of our sidecar along with user functions.</p></li><li><p><a href="https://github.com/eigr/massa" target="_blank" rel="noopener noreferrer">Massa</a>: is a Sidecar Proxy and part of the <em>Eigr Functions</em> offering that aims to
provide a high-level abstraction for General Purpose Stateful Serverless application development.</p></li></ul><p>Massa is responsible for managing the entire data access infrastructure for user functions, as well as other technical tasks such as providing the implementation of the user contract via <a href="https://grpc.io/" target="_blank" rel="noopener noreferrer">gRPC</a> to the outside world, <a href="https://cloud.google.com/endpoints/docs/grpc/transcoding" target="_blank" rel="noopener noreferrer">transcoding HTTP requests to gRPC</a>, caching, making requests to external sources when requested and other tasks that would once have to be performed by the developer directly in his application.</p><p>With Massa the developer only has to worry about their domain objects and their user service interface via a
contract-first declarative approach. These two components together form Eigr Functions.</p><p>In addition to these projects, we also work on several other R&amp;D projects that allow us to understand certain parts
of the problem we are trying to solve and thus apply the acquired knowledge to the main projects. Research projects worth noting are the following:</p><ul><li><p><a href="https://github.com/eigr/falco" target="_blank" rel="noopener noreferrer">Falco</a>: A fork of the elixir-grpc project where we try to improve performance and provide a replacement for the original project that is not being updated by the community that created it. Its development continues in research status.</p></li><li><p><a href="https://github.com/eigr-labs/steinadler" target="_blank" rel="noopener noreferrer">Steinadler</a>: A high-level alternative to Erlang Distribution. While we are aware of the incredible capabilities of the Erlang Distribution, we also know that there are numerous deficiencies in this protocol that we are trying to address. Its development is currently at a standstill.</p></li><li><p><a href="https://github.com/eigr-labs/spawn" target="_blank" rel="noopener noreferrer">Spawn</a>: The <strong>Actor Mesh Framework</strong> is based on the <!-- -->[sidecar proxy pattern]<!-- -->
(<a href="https://dzone.com/articles/sidecar-design-pattern-in-your-microservices-ecosy-1" target="_blank" rel="noopener noreferrer">https://dzone.com/articles/sidecar-design-pattern-in-your-microservices-ecosy-1</a>) to provide the multi-language
Actor Model framework. Spawns' technology-stack on top of the BEAM VM (the Erlang virtual machine) provides support
for different languages from its native Actor model. Spawn is made up of the following components:</p><ol><li><p>A semantic protocol based on Protocol Buffers.</p></li><li><p>A Sidecar Proxy written in Elixir that implements this protocol as well as persistent storage adapters.</p></li><li><p>SDKs to support different programming languages.</p></li></ol><p>Spawn is currently in full development where its main parts will likely be incorporated into the core of Massa.</p></li><li><p>Astreu (<a href="https://github.com/eigr/Astreu" target="_blank" rel="noopener noreferrer">https://github.com/eigr/Astreu</a>): High-performance Messaging System based on a gRPC protocol written in
Elixir. Your development is on hold (usable for testing).</p></li></ul><div class="theme-admonition theme-admonition-info alert alert--info admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_S0QG"><p>In addition to these projects we have the Eigr Functions SDKs which are written in some programming languages ​​like
Elixir, Go, Java and others. Each of these projects is in different phases of development but none are yet readily
functional.</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="eigr-functions">Eigr Functions!<a class="hash-link" href="#eigr-functions" title="Direct link to heading">​</a></h2><p>Currently, the Massa project, where our greatest effort is concentrated, is capable of communicating with user
functions that implement the Cloudstate protocol in version 0.5 and is capable of dealing only with Action-type
entities, which are stateless entities.</p><p>In the next version of our proxy, we will probably no longer support the Cloudstate protocol because, once Cloudstate has been discontinued, we will adopt our own Protocol and entities.</p><p>We intend to support all the original project entity types, namely Action <strong>a.k.a.</strong> Stateless support, Event
Sourcing, Value Entity (CRUD), and CRDTs (<a href="https://crdt.tech/" target="_blank" rel="noopener noreferrer">Conflict Free Replicated Data Types</a>). We
will just not bring the semantics of the previous protocol, and creating our own protocol to support these entities.</p><p>So we are in the process of a complete redesign of our protocol and therefore our proxy as well. We are doing this
with proof of concepts in parallel projects and in project-specific branches within Massa.</p><p>This is a summary of what we have done and where we intend to go. I hope to be able to count on your
collaboration in any way, with code, with good discussions, answering doubts, or just making small talk around <a href="https://discord.gg/Y55eZpyvNs" target="_blank" rel="noopener noreferrer">here</a>.</p><p>I'm curious to know a little more about you and what you expect from us.</p><p>Ah, I was forgetting, for those who want to know the reasons for the name Massa I suggest reading <a href="https://github.com/eigr/massa/blob/main/FAQ.md" target="_blank" rel="noopener noreferrer">here</a>.</p><p>Thanks for reading!</p>]]></content>
        <author>
            <name>Adriano Santos</name>
            <uri>https://github.com/sleipnir</uri>
        </author>
        <category label="serverless" term="serverless"/>
        <category label="cloudstate" term="cloudstate"/>
        <category label="eigr-functions" term="eigr-functions"/>
        <category label="project" term="project"/>
        <category label="status" term="status"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CodeBEAM Europe, Stockholm 2022]]></title>
        <id>codebeam-sto-2022</id>
        <link href="https://eigr.io/blog/codebeam-sto-2022"/>
        <updated>2022-05-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We're excited to be selected]]></summary>
        <content type="html"><![CDATA[<p>We're excited to be selected
for <a href="https://codesync.global/speaker/marcel-lanz/#947a-serverless-runtime-on-the-beam" target="_blank" rel="noopener noreferrer">one of the main talks</a> at the
CodeBEAM Europe conference in Stockholm in May
2022 <a href="https://codesync.global/conferences/code-beam-sto-2022/" target="_blank" rel="noopener noreferrer">CodeBEAM Europe</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="abstract">Abstract<a class="hash-link" href="#abstract" title="Direct link to heading">​</a></h2><p>Serverless runtimes are often hidden in cloud providers offering and exposed solely by their programming API and
deployment procedures. In this talk, we'll explore an open-source Serverless runtime built for the cloud and
on-premises, running on the BEAM with a polyglot programming model to build general-purpose applications.</p><p>In this talk, we'll present how the BEAM and OTP are an ideal fit to build a Serverless runtime. After an introduction
about Serverless and a polyglot programming model, we'll present the open-source project at eigr.io where we implemented
the core of our runtime based on Erlang/OTP and written in Elixir.</p><p><strong>Event:</strong>
<a href="https://codesync.global/speaker/marcel-lanz/#947a-serverless-runtime-on-the-beam" target="_blank" rel="noopener noreferrer">https://codesync.global/speaker/marcel-lanz/#947a-serverless-runtime-on-the-beam</a></p><p><strong>
Slides:</strong> <a href="https://www.slideshare.net/MarcelLanz/v13eigrioaserverlessruntimeonthebeampptx/MarcelLanz/v13eigrioaserverlessruntimeonthebeampptx" target="_blank" rel="noopener noreferrer">Slideshare</a>
, <a href="https://docs.google.com/presentation/d/1Km-zh2rItr-setoUJjJV9W43tNZVNJmQtXb3_va_vRQ/edit?usp=sharing" target="_blank" rel="noopener noreferrer">Google Slides</a></p>]]></content>
        <author>
            <name>Marcel Lanz</name>
            <uri>https://github.com/marcellanz</uri>
        </author>
        <category label="serverless" term="serverless"/>
        <category label="eigr" term="eigr"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[ACM SIGPLAN, ICFP Erlang Workshop 2021]]></title>
        <id>acm-sigplan-ifcp-erlang-workshop-2021</id>
        <link href="https://eigr.io/blog/acm-sigplan-ifcp-erlang-workshop-2021"/>
        <updated>2021-08-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We're excited to be selected]]></summary>
        <content type="html"><![CDATA[<p>We're excited to be selected
for <a href="https://icfp21.sigplan.org/details/erlang-2021-papers/13/Lightning-Talk-eigr-io-A-Serverless-Runtime-on-the-BEAM" target="_blank" rel="noopener noreferrer">one of the Lightning Talks</a>
right after the Erlang Keynote at the ACM
SIGPLAN, <a href="https://icfp21.sigplan.org/home/erlang-2021" target="_blank" rel="noopener noreferrer">ICFP Erlang Workshop 2021</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="abstract">Abstract<a class="hash-link" href="#abstract" title="Direct link to heading">​</a></h2><p>Serverless runtimes are often hidden in a cloud providers offering and exposed
solely by their programming API and deployment procedures. In this talk, we’ll
explore an open-source Serverless runtime built for the cloud and on-premises,
running on the BEAM with a polyglot programming model to build general purpose
applications.</p><p>Building general purpose applications using multiple languages and having a
story how to handle state was our main motivation to explore the space of a
Serverless runtime to be built. We think the BEAM, OTP and Elixir/Erlang are a
perfect match to build on.</p><p>With this talk, we combine herein the world of the BEAM with cloud technology
like a gRPC-based protocol, Kubernetes and a polyglot programming model with
languages supported like Go, JavaScript, JVM-languages, Python and many more.</p><p><strong>Event:</strong>
<a href="https://icfp21.sigplan.org/details/erlang-2021-papers/13/Lightning-Talk-eigr-io-A-Serverless-Runtime-on-the-BEAM" target="_blank" rel="noopener noreferrer">https://icfp21.sigplan.org/details/erlang-2021-papers/13/Lightning-Talk-eigr-io-A-Serverless-Runtime-on-the-BEAM</a></p><p><strong>
Slides:</strong> <a href="https://www.slideshare.net/MarcelLanz/eigrio-a-serverless-runtime-on-the-beam-acm-sigplan-icfp-2021-erlang-workshop" target="_blank" rel="noopener noreferrer">Slideshare</a>
, <a href="https://docs.google.com/presentation/d/1mLmSFY0z6gxoG88-phcFTwyVBMv8R9myBA5MZOWoJso/edit#slide=id.p1" target="_blank" rel="noopener noreferrer">Google Slides</a></p>]]></content>
        <author>
            <name>Marcel Lanz</name>
            <uri>https://github.com/marcellanz</uri>
        </author>
        <category label="serverless" term="serverless"/>
        <category label="eigr" term="eigr"/>
    </entry>
</feed>